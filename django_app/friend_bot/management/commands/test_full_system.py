from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from friend_bot.models import User, TelegramGroup, UserInGroup, DailyCheckin, Message, MessageTypePoints


class Command(BaseCommand):
    help = '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤, —á–µ–∫–∏–Ω–æ–≤ –∏ –∑–≤–∞–Ω–∏–π'

    def handle(self, *args, **options):
        self.stdout.write('üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã...\n')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥—Ä—É–ø–ø—É
        group, created = TelegramGroup.objects.get_or_create(
            telegram_id=-1001234567890,
            defaults={'title': '–¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞', 'is_active': True}
        )
        
        if created:
            self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞: {group.title}')
        else:
            self.stdout.write(f'- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥—Ä—É–ø–ø–∞: {group.title}')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user, created = User.objects.get_or_create(
            telegram_id=123456789,
            defaults={
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'username': 'testuser',
                'is_active': True
            }
        )
        
        if created:
            self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}')
        else:
            self.stdout.write(f'- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}')
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≥—Ä—É–ø–ø–æ–π
        user_in_group, created = UserInGroup.objects.get_or_create(
            user=user,
            group=group,
            defaults={
                'is_active': True,
                'rating': 0,
                'message_count': 0,
                'coefficient': 0.5
            }
        )
        
        if created:
            self.stdout.write(f'‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É')
        else:
            self.stdout.write(f'- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ')
        
        self.stdout.write(f'\nüìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:')
        self.stdout.write(f'  –†–µ–π—Ç–∏–Ω–≥: {user_in_group.rating}')
        self.stdout.write(f'  –°–æ–æ–±—â–µ–Ω–∏–π: {user_in_group.message_count}')
        self.stdout.write(f'  –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: {user_in_group.coefficient}')
        self.stdout.write(f'  –ó–≤–∞–Ω–∏–µ: {user_in_group.rank.name if user_in_group.rank else "–ù–µ—Ç"}')
        
        # –°–æ–∑–¥–∞–µ–º DailyCheckin —Å –≤—á–µ—Ä–∞—à–Ω–µ–π –¥–∞—Ç–æ–π
        yesterday = timezone.now() - timedelta(days=1)
        checkin, created = DailyCheckin.objects.get_or_create(
            user=user,
            group=group,
            defaults={
                'consecutive_days': 0,
                'last_checkin': yesterday
            }
        )
        
        if created:
            self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω —á–µ–∫–∏–Ω –Ω–∞ –≤—á–µ—Ä–∞: {checkin.last_checkin}')
        else:
            checkin.last_checkin = yesterday
            checkin.save()
            self.stdout.write(f'- –û–±–Ω–æ–≤–ª–µ–Ω —á–µ–∫–∏–Ω –Ω–∞ –≤—á–µ—Ä–∞: {checkin.last_checkin}')
        
        self.stdout.write(f'  –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–µ –¥–Ω–∏: {checkin.consecutive_days}')
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è (—Å–µ–≥–æ–¥–Ω—è)
        self.stdout.write(f'\nüìù –°–∏–º—É–ª–∏—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è...')
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = Message.objects.create(
            telegram_id=1,
            date=timezone.now(),
            user=user,
            chat=group,
            message_type='text',
            text='–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
        )
        
        self.stdout.write(f'‚úì –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {message.get_message_type_display()}')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        result = user_in_group.add_message_points('text')
        
        self.stdout.write(f'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—á–∫–æ–≤:')
        self.stdout.write(f'  –ë–∞–∑–æ–≤—ã–µ –æ—á–∫–∏: 5')
        self.stdout.write(f'  –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: {result["points"] / 5:.1f}')
        self.stdout.write(f'  –ò—Ç–æ–≥–æ–≤—ã–µ –æ—á–∫–∏: {result["points"]}')
        self.stdout.write(f'  –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {user_in_group.rating}')
        self.stdout.write(f'  –ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ: {user_in_group.rank.name if user_in_group.rank else "–ù–µ—Ç"}')
        
        if result.get('rank_changed'):
            self.stdout.write(self.style.SUCCESS(f'  ‚úÖ –ó–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!'))
        else:
            self.stdout.write(f'  ‚ÑπÔ∏è –ó–≤–∞–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º DailyCheckin –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        checkin.refresh_from_db()
        self.stdout.write(f'\nüìÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–∏–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è:')
        self.stdout.write(f'  –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–µ –¥–Ω–∏: {checkin.consecutive_days}')
        self.stdout.write(f'  –ü–æ—Å–ª–µ–¥–Ω–∏–π —á–µ–∫–∏–Ω: {checkin.last_checkin}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤ UserInGroup
        user_in_group.refresh_from_db()
        self.stdout.write(f'\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:')
        self.stdout.write(f'  –†–µ–π—Ç–∏–Ω–≥: {user_in_group.rating}')
        self.stdout.write(f'  –°–æ–æ–±—â–µ–Ω–∏–π: {user_in_group.message_count}')
        self.stdout.write(f'  –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: {user_in_group.coefficient}')
        self.stdout.write(f'  –ó–≤–∞–Ω–∏–µ: {user_in_group.rank.name if user_in_group.rank else "–ù–µ—Ç"}')
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.stdout.write(f'\nüßπ –û—á–∏—â–∞—é —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
        message.delete()
        user_in_group.delete()
        checkin.delete()
        user.delete()
        group.delete()
        
        self.stdout.write(self.style.SUCCESS(f'\n‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!'))

