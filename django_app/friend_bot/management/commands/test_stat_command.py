from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from friend_bot.models import User, TelegramGroup, UserInGroup, DailyCheckin, Message


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã stat –≤ –±–æ—Ç–µ'

    def handle(self, *args, **options):
        self.stdout.write('üìä –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã stat...\n')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥—Ä—É–ø–ø—É
        group, created = TelegramGroup.objects.get_or_create(
            telegram_id=-1001234567890,
            defaults={'title': '–¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞', 'is_active': True}
        )
        
        if created:
            self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: {group.title}')
        else:
            self.stdout.write(f'- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥—Ä—É–ø–ø–∞: {group.title}')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_users = [
            {'name': '–ê–ª–∏—Å–∞', 'username': 'alice', 'messages': 10, 'consecutive_days': 0},
            {'name': '–ë–æ–±', 'username': 'bob', 'messages': 25, 'consecutive_days': 1},
            {'name': '–í–∞—Å—è', 'username': 'vasya', 'messages': 50, 'consecutive_days': 2},
            {'name': '–ì–∞–ª—è', 'username': 'galya', 'messages': 100, 'consecutive_days': 3},
            {'name': '–î–∏–º–∞', 'username': 'dima', 'messages': 200, 'consecutive_days': 5},
        ]
        
        users_created = 0
        
        for i, user_data in enumerate(test_users):
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user, created = User.objects.get_or_create(
                telegram_id=100000000 + i,
                defaults={
                    'first_name': user_data['name'],
                    'username': user_data['username'],
                    'is_active': True
                }
            )
            
            if created:
                users_created += 1
                self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}')
            else:
                self.stdout.write(f'- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}')
            
            # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å —Å –≥—Ä—É–ø–ø–æ–π
            user_in_group, created = UserInGroup.objects.get_or_create(
                user=user,
                group=group,
                defaults={
                    'is_active': True,
                    'rating': 0,
                    'message_count': 0,
                    'coefficient': 0.5
                }
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            user_in_group.rating = user_data['messages'] * 5  # 5 –æ—á–∫–æ–≤ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
            user_in_group.message_count = user_data['messages']
            user_in_group.save()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–≤–∞–Ω–∏–µ
            user_in_group.update_rank()
            
            # –°–æ–∑–¥–∞–µ–º DailyCheckin
            checkin_date = timezone.now() - timedelta(days=user_data['consecutive_days'])
            checkin, created = DailyCheckin.objects.get_or_create(
                user=user,
                group=group,
                defaults={
                    'consecutive_days': user_data['consecutive_days'],
                    'last_checkin': checkin_date
                }
            )
            
            if not created:
                checkin.consecutive_days = user_data['consecutive_days']
                checkin.last_checkin = checkin_date
                checkin.save()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
            if user_data['consecutive_days'] == 0:
                user_in_group.coefficient = 0.5
            elif user_data['consecutive_days'] == 1:
                user_in_group.coefficient = 1.0
            else:
                user_in_group.coefficient = 1.0 + (user_data['consecutive_days'] - 1) * 0.1
            
            user_in_group.save()
            
            self.stdout.write(f'  ‚Üí –†–µ–π—Ç–∏–Ω–≥: {user_in_group.rating}, –ó–≤–∞–Ω–∏–µ: {user_in_group.rank.name if user_in_group.rank else "–ù–µ—Ç"}, –ö–æ—ç—Ñ: {user_in_group.coefficient:.1f}')
        
        self.stdout.write(
            self.style.SUCCESS(f'\n‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_created}')
        )
        
        self.stdout.write(f'\nüìä –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /stat –≤ –±–æ—Ç–µ!')
        self.stdout.write(f'üì± –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É —Å ID: {group.telegram_id}')
        self.stdout.write(f'üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /stat')

